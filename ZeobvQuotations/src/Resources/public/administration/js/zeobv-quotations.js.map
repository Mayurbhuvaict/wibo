{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/page/zeobv-quotations-detail/zeobv-quotations-detail.html.twig","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/override/sw-order/page/sw-order-list/index.js","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/page/zeobv-quotations-list/zeobv-quotations-list.html.twig","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/page/zeobv-quotations-list/index.js","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/page/zeobv-quotations-detail/index.js","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/view/zeobv-quotations-detail-base/index.js","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/index.js","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/main.js","webpack:////app/custom/plugins/ZeobvQuotations/src/Resources/app/administration/src/module/zeobv-quotations/view/zeobv-quotations-detail-base/zeobv-quotations-detail-base.html.twig"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Component","Shopware","Criteria","Data","override","methods","getList","isLoading","Service","mergeWithStoredFilters","storeKey","orderCriteria","criteria","activeFilterNumber","filters","length","addAssociation","addFilter","multi","equals","orderRepository","search","response","total","orders","extend","template","not","getOrderColumns","label","routerLink","allowResize","primary","dataIndex","getVariantFromQuotationState","order","this","stateStyleDataProviderService","getStyle","extensions","zeobvQuote","stateMachineState","technicalName","variant","inject","data","quotationOptions","showModal","computed","$super","arguments","stateMachineStateCriteria","addSorting","field","equalsAny","quotationOptionPlaceholder","$tc","translated","createdComponent","stateMachineStateRepository","repositoryFactory","reloadEntityData","then","getTransitionOptions","loadQuotationStates","stateMachineService","getState","id","statePromises","Promise","all","getAllStates","allStates","quotationState","buildTransitionOptions","transitions","resolve","stateMachineName","allTransitions","possibleTransitions","options","map","state","index","option","stateName","disabled","feature","isActive","forEach","transitionToState","filter","transition","toStateName","actionName","onQuickQuotationStatusChange","orderStateMachineService","transitionQuotationState","$emit","Module","register","type","title","description","color","icon","snippets","deDE","nlNL","enGB","routes","list","component","path","detail","redirect","meta","privilege","appSystem","view","children","base","parentPath","props","default","$route","orderId","params","navigation","parent","position","Application","$container","resetProviders","addServiceProviderDecorator","quotationId","route","headers","getBasicHeaders","httpClient","post"],"mappings":"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","file":"static/js/zeobv-quotations.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/zeobvquotations/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"igE4\");\n","module.exports = \"{% block sw_order_detail_base_status_card %}\\n    <zeobv-quotation-state-history-card\\n        v-if=\\\"!isEditing\\\"\\n        ref=\\\"state-card\\\"\\n        :title=\\\"$tc('sw-order.stateCard.cardTitle')\\\"\\n        :isLoading=\\\"isLoading\\\"\\n        :order=\\\"order\\\"\\n        @order-state-change=\\\"reloadEntityData\\\"\\n        @options-change=\\\"onStateTransitionOptionsChanged\\\">\\n    </zeobv-quotation-state-history-card>\\n{% endblock %}\\n\";","const { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.override('sw-order-list', {\n    methods: {\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await Shopware.Service('filterService')\n                .mergeWithStoredFilters(this.storeKey, this.orderCriteria);\n\n            this.activeFilterNumber = criteria.filters.length;\n\n            criteria.addAssociation('zeobvQuote');\n            criteria.addFilter(\n                Criteria.multi(\n                    'OR',\n                    [\n                        Criteria.equals('order.extensions.zeobvQuote.id', null),\n                        Criteria.equals('order.extensions.zeobvQuote.stateMachineState.technicalName', 'accepted'),\n                    ]\n                )\n            );\n\n            try {\n                const response = await this.orderRepository.search(criteria);\n\n                this.total = response.total;\n                this.orders = response;\n                this.isLoading = false;\n            } catch {\n                this.isLoading = false;\n            }\n        }\n    }\n});\n","module.exports = \"{% block sw_order_list_smart_bar_header_title_text %}\\n    {{ $tc('zeobv-quotations.general.mainMenuItemGeneral') }}\\n{% endblock %}\\n\\n{% block sw_order_list_smart_bar_actions_add %}{% endblock %}\\n\\n{% block sw_order_list_grid_columns_order_number %}\\n    <template #column-extensions.zeobvQuote.quoteNumber=\\\"{ item }\\\">\\n        {% block sw_order_list_grid_order_number_link %}\\n            <router-link :to=\\\"{ name: 'zeobv.quotations.detail', params: { id: item.id } }\\\">\\n                {{ item.extensions.zeobvQuote.quoteNumber }}\\n            </router-link>\\n        {% endblock %}\\n    </template>\\n{% endblock %}\\n\\n{% block sw_order_list_grid_columns_state %}\\n    <template #column-extensions.zeobvQuote.stateMachineState.name=\\\"{ item }\\\">\\n        <sw-label :variant=\\\"getVariantFromQuotationState(item)\\\" appearance=\\\"pill\\\">\\n            {{ item.extensions.zeobvQuote.stateMachineState.translated.name }}\\n        </sw-label>\\n    </template>\\n{% endblock %}\\n\\n{% block sw_order_list_grid_columns_actions_view %}\\n    <sw-context-menu-item class=\\\"sw-order-list__order-view-action\\\" :routerLink=\\\"{ name: 'zeobv.quotations.detail', params: { id: item.id } }\\\">\\n        {{ $tc('sw-order.list.contextMenuView') }}\\n    </sw-context-menu-item>\\n{% endblock %}\\n\";","import template from './zeobv-quotations-list.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.extend('zeobv-quotations-list', 'sw-order-list', {\n    template,\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n\n            const criteria = await Shopware.Service('filterService')\n                .mergeWithStoredFilters(this.storeKey, this.orderCriteria);\n\n            this.activeFilterNumber = criteria.filters.length;\n\n            criteria.addAssociation('zeobvQuote.stateMachineState');\n            criteria.addFilter(Criteria.not('and', [Criteria.equals('order.zeobvQuote.id', null)]));\n\n            try {\n                const response = await this.orderRepository.search(criteria);\n\n                this.total = response.total;\n                this.orders = response;\n                this.isLoading = false;\n            } catch {\n                this.isLoading = false;\n            }\n        },\n\n        getOrderColumns() {\n            return [{\n                property: 'extensions.zeobvQuote.quoteNumber',\n                label: 'zeobv-quotations.list.columnQuoteNumber',\n                routerLink: 'zeo.quotations.detail',\n                allowResize: true,\n                primary: true\n            }, {\n                property: 'salesChannel.name',\n                label: 'sw-order.list.columnSalesChannel',\n                allowResize: true\n            }, {\n                property: 'orderCustomer.firstName',\n                dataIndex: 'orderCustomer.lastName,orderCustomer.firstName',\n                label: 'sw-order.list.columnCustomerName',\n                allowResize: true\n            },  {\n                property: 'extensions.zeobvQuote.stateMachineState.name',\n                label: 'zeobv-quotations.list.columnState',\n                allowResize: true\n            }, {\n                property: 'extensions.zeobvQuote.expiryDate',\n                label: 'zeobv-quotations.list.columnExpiryDate',\n                allowResize: true\n            }];\n        },\n\n        getVariantFromQuotationState(order) {\n            return this.stateStyleDataProviderService.getStyle(\n                'quotation.state', order.extensions.zeobvQuote.stateMachineState.technicalName\n            ).variant;\n        }\n    }\n});\n","import template from './zeobv-quotations-detail.html.twig';\n\nconst { Component } = Shopware;\n\nComponent.extend('zeobv-quotations-detail', 'sw-order-detail', {\n    template\n});\n","import template from './zeobv-quotations-detail-base.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\nComponent.extend('zeobv-quotations-detail-base', 'sw-order-detail-base', {\n    template,\n\n    inject: [\n        'stateMachineService',\n        'repositoryFactory',\n        'orderStateMachineService',\n    ],\n\n    data() {\n        return {\n            quotationOptions: [],\n            showModal: false,\n        }\n    },\n\n    computed: {\n        orderCriteria() {\n            const criteria = this.$super('orderCriteria', ...arguments);\n\n            criteria.addAssociation('zeobvQuote');\n\n            return criteria;\n        },\n\n        stateMachineStateCriteria() {\n            const criteria = new Criteria();\n\n            criteria.addSorting({ field: 'name', order: 'ASC' });\n            criteria.addAssociation('stateMachine');\n            criteria.addFilter(\n                Criteria.equalsAny(\n                    'state_machine_state.stateMachine.technicalName',\n                    ['quotation.state'],\n                ),\n            );\n\n            return criteria;\n        },\n\n        quotationOptionPlaceholder() {\n            if (this.isLoading) return null;\n\n            return `${this.$tc('zeobv-quotations.detail.stateCard.headlineQuotationState')}: \\\n            ${this.order.extensions.zeobvQuote.stateMachineState.translated.name}`;\n        },\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent', ...arguments);\n            this.stateMachineStateRepository = this.repositoryFactory.create('state_machine_state');\n        },\n\n        reloadEntityData() {\n            this.$super('reloadEntityData', ...arguments).then(() => {\n                this.getTransitionOptions();\n            });\n        },\n\n        loadQuotationStates() {\n            return this.stateMachineService.getState('zeobv_quote', this.order.extensions.zeobvQuote.id,{},{},'quotationStateId')\n        },\n\n        getTransitionOptions() {\n            const statePromises = [this.loadQuotationStates()];\n\n            return Promise.all(\n                [\n                    this.getAllStates(),\n                    ...statePromises,\n                ],\n            ).then((data) => {\n                const allStates = data[0];\n                const quotationState = data[1];\n                this.quotationOptions = this.buildTransitionOptions(\n                    'order.quotation_state',\n                    allStates,\n                    quotationState.data.transitions,\n                );\n\n                return Promise.resolve();\n            });\n        },\n\n        buildTransitionOptions(stateMachineName, allTransitions, possibleTransitions) {\n            const options = allTransitions.map((state, index) => {\n                const option = {\n                    stateName: state.technicalName,\n                    id: null,\n                    name: state.translated.name,\n                    disabled: true,\n                };\n\n                if (this.feature.isActive('FEATURE_NEXT_7530')) {\n                    option.id = index;\n                }\n\n                return option;\n            });\n\n            options.forEach((option) => {\n                const transitionToState = possibleTransitions.filter((transition) => {\n                    return transition.toStateName === option.stateName;\n                });\n                if (transitionToState.length >= 1) {\n                    option.disabled = false;\n                    option.id = transitionToState[0].actionName;\n                }\n\n                return option;\n            });\n\n            return options;\n        },\n\n        getAllStates() {\n            return this.stateMachineStateRepository.search(this.stateMachineStateCriteria);\n        },\n\n        onQuickQuotationStatusChange(actionName) {\n            this.orderStateMachineService.transitionQuotationState(\n                this.order.extensions.zeobvQuote.id,\n                actionName,\n            ).then(() => {\n                this.$emit('order-state-change');\n            });\n        },\n    }\n});\n","import './page/zeobv-quotations-list';\nimport './page/zeobv-quotations-detail';\n\nimport './view/zeobv-quotations-detail-base';\n\nimport deDE from './snippet/de-DE.json';\nimport enGB from './snippet/en-GB.json';\nimport nlNL from './snippet/nl-NL.json';\n\nconst { Module } = Shopware;\n\nModule.register('zeobv-quotations', {\n    type: 'plugin',\n    name: 'Quotations',\n    title: 'zeobv-quotations.general.mainMenuItemGeneral',\n    description: 'sw-property.general.descriptionTextModule',\n    color: '#ff3d58',\n    icon: 'default-shopping-paper-bag-product',\n\n    snippets: {\n        'de-DE': deDE,\n        'nl-NL': nlNL,\n        'en-GB': enGB\n    },\n\n    routes: {\n        list: {\n            component: 'zeobv-quotations-list',\n            path: 'list'\n        },\n        detail: {\n            component: 'zeobv-quotations-detail',\n            path: 'detail/:id',\n            redirect: {\n                name: 'zeobv.quotations.detail.base'\n            },\n            meta: {\n                privilege: 'order.viewer',\n                appSystem: {\n                    view: 'detail'\n                }\n            },\n            children: {\n                base: {\n                    component: 'zeobv-quotations-detail-base',\n                    path: 'base',\n                    meta: {\n                        parentPath: 'zeobv.quotations.detail',\n                        privilege: 'order.viewer'\n                    }\n                }\n            },\n            props: {\n                default: ($route) => {\n                    return { orderId: $route.params.id };\n                }\n            }\n        }\n    },\n\n    navigation: [{\n        label: 'zeobv-quotations.general.mainMenuItemGeneral',\n        parent: 'sw-order',\n        color: '#ff3d58',\n        path: 'zeobv.quotations.list',\n        icon: 'default-shopping-paper-bag-product',\n        position: 100\n    }]\n});\n","import './module/zeobv-quotations';\nimport './override/sw-order';\n\n// add state machine transition handler for quotation state\nShopware.Application.$container.resetProviders();\nShopware.Application.addServiceProviderDecorator('orderStateMachineService', (orderStateMachineService) => {\n    orderStateMachineService.transitionQuotationState = (quotationId, actionName) => {\n        const route = `_action/zeobv_quote/${quotationId}/state/${actionName}`;\n\n        const headers = orderStateMachineService.getBasicHeaders();\n\n        return orderStateMachineService.httpClient\n            .post(route, {}, {\n                headers,\n            });\n    };\n\n    return orderStateMachineService;\n});\n","module.exports = \"{% block sw_order_detail_base_status_change_transaction %}\\n    <sw-order-state-select\\n        v-if=\\\"!isLoading\\\"\\n        v-tooltip=\\\"{\\n                        message: $tc('sw-privileges.tooltip.warning'),\\n                        disabled: acl.can('order.editor'),\\n                        showOnDisabledElements: true\\n                    }\\\"\\n        class=\\\"sw-order-state-select__quotation-state\\\"\\n        roundedStyle\\n        :transitionOptions=\\\"quotationOptions\\\"\\n        :placeholder=\\\"quotationOptionPlaceholder\\\"\\n        @state-select=\\\"onQuickQuotationStatusChange\\\">\\n    </sw-order-state-select>\\n{% endblock %}\\n\\n{% block sw_order_detail_base_status_change_delivery %}{% endblock %}\\n\\n{% block sw_order_detail_base_status_change_order %}{% endblock %}\\n\\n{% block sw_order_detail_base_status_card %}{% endblock %}\\n\\n{% block sw_order_detail_base_document_grid %}{% endblock %}\\n\";"],"sourceRoot":""}